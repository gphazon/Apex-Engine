// Apex Extensions
// By GPhazon
//
// Copyright (C) 2017
//
// Cortex Engine by Motive
// Apex SC2 Roleplaying Engine
// Copyright (C) 2017 <http://www.apexrp.com/>

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

#include "Apex/Common/Global.galaxy"
#include "Apex/Toolkit/Toolkit.galaxy"
#include "Apex/Chat/Chat.galaxy"
#include "Apex/Events/Events.galaxy"
#include "Apex/Commands/Commands.galaxy"
#include "Apex/ApexUI/UI.galaxy"

	libcrtx_write(PlayerGroupActive(), "Welcome to Apex v" + IntToString(libcrtx_version_major) + "." + IntToString(libcrtx_version_minor) + "." + IntToString(libcrtx_version_bugfix) + libcrtx_version_hotfix + ", with Apex Extensions v" +IntToString(libcrtx_frg_version_major) + "." + IntToString(libcrtx_frg_version_minor) + "." + IntToString(libcrtx_frg_version_bugfix) + libcrtx_frg_version_hotfix + ". Learn about Apex at ApexRP.com, or visit the reddit https://www.reddit.com/r/StarCraftRP/, \"Roleplaying\".");
	
	bool libcrtx_MapCheck()
{
	bool r = true;
	
	if ( MeleeGetOption(1, c_meleeOptionDefeat || MeleeGetOption(1, c_meleeOptionVictory) ) {
		libcrtx_write(PlayerGroupAll(), "Melee Trigger has been detected!");
		 r = false;
	}
	
	if( PlayerType(libcrtx_setting_getint(libcrtx_setting_int_neutralcomputer)) != c_playerTypeNeutral ) {
		libcrtx_write(PlayerGroupAll(), "Incorrect player settings for Neutral!");
		r = false;
	}
	
	if( PlayerType(libcrtx_setting_getint(libcrtx_setting_int_hostilecomputer)) != c_playerTypeHostile ) {
		libcrtx_write(PlayerGroupAll(), "Incorrect player settings for Hostile!");
		r = false;
	}
	
	if( PlayerType(libcrtx_setting_getint(libcrtx_setting_int_smarthostile)) != c_playerTypeComputer ) {
		libcrtx_write(PlayerGroupAll(), "Incorrect player settings for Hostile!");
		r = false;
	}
	
	if( !r ) {
		libcrtx_write(PlayerGroupAll(), "Some errors were detected. Apex has failed to startup.");
		libcrtx_write(PlayerGroupAll(), "Engine Version: " + libcrtx_get_versionstring());
		libcrtx_write_text(PlayerGroupAll(), StringToText("Please adjust your settings, or inform the author and or publisher of ") + GameMapName() );
	}

	return r;
}

void libcrtx_InitLib()
{
	libcrtx_set_debug_mode(false);

	libcrtx_debug("Apex_init()");

	libactionbar_init();
	libHash_InitLib();

	libcrtx_settings_initdefault();

	if( libcrtx_MapCheck() ) {
		libcrtx_toolkit_init();
		libcrtx_admin_init();
		libcrtx_events_init();
		libcrtx_chat_init();
		libcrtx_commands_init();
		libcrtx_ui_init();
		libcrtx_permissions_init();
	}
	
	libcrtx_Welcome();
	
}
